apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'checkstyle'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.tc.mvpvmdemo"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.jniLibs.srcDirs = ['libs']
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    packagingOptions {
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/license.txt'
    }
    lintOptions {
        abortOnError true
        lintConfig file("${project.rootDir}/config/quality/lint/lint.xml")
        htmlReport true
        htmlOutput file("$project.buildDir/reports/lint/lint.html")
    }
    dataBinding.enabled true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    kapt 'com.android.databinding:compiler:2.3.2'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.google.code.gson:gson:2.7'
    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile "com.nhaarman:mockito-kotlin:1.1.0"
    testCompile 'org.amshove.kluent:kluent:1.14'
}
repositories {
    mavenCentral()
}

configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    }
}

afterEvaluate {
    android.sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith('test') || !sourceSet.name.startsWith('androidTest')) {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}

task checkstyle(type: Checkstyle) {
    configFile file("${project.rootDir}/config/quality/checkstyle/checkstyle.xml")
    configProperties.suppressionsPath =
            file("${project.rootDir}/config/quality/checkstyle/checkstyle_suppressions.xml") ;
    source 'src'
    include '**/*.kt', '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}

checkstyle {
    toolVersion = '6.14'
}

check.dependsOn 'checkstyle', 'lint'